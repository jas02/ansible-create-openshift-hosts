[OSEv3:vars]

###########################################################################
### Ansible Vars
###########################################################################
timeout=60
ansible_become=yes
ansible_ssh_user=root

###########################################################################
### OpenShift Basic Vars
###########################################################################
openshift_deployment_type=openshift-enterprise
openshift_disable_check="disk_availability,memory_availability,docker_image_availability"

# OpenShift Version:
openshift_image_tag={{ openshift_image_tag }}
# Use this variable to specify an RPM version to install or configure.
openshift_pkg_version={{ openshift_pkg_version }}
openshift_release={{ openshift_release }}

openshift_storage_glusterfs_namespace=glusterfs
openshift_storage_glusterfs_name=storage
openshift_storage_glusterfs_storageclass_default=true
openshift_storage_glusterfs_is_native=false

openshift_master_dynamic_provisioning_enabled=True


# Node Groups
openshift_node_groups=[{'name': 'node-config-master', 'labels': ['node-role.kubernetes.io/master=true','runtime=docker']}, {'name': 'node-config-infra', 'labels': ['node-role.kubernetes.io/infra=true','runtime=docker']}, {'name': 'node-config-compute', 'labels': ['node-role.kubernetes.io/compute=true','runtime=docker'], 'edits': [{ 'key': 'kubeletArguments.pods-per-core','value': ['20']}]}]

# Configure logrotate scripts
# See: https://github.com/nickhammond/ansible-logrotate
logrotate_scripts=[{"name": "syslog", "path": "/var/log/cron\n/var/log/maillog\n/var/log/messages\n/var/log/secure\n/var/log/spooler\n", "options": ["daily", "rotate 7","size 500M", "compress", "sharedscripts", "missingok"], "scripts": {"postrotate": "/bin/kill -HUP `cat /var/run/syslogd.pid 2> /dev/null` 2> /dev/null || true"}}]

# Deploy Operator Lifecycle Manager Tech Preview
openshift_enable_olm=true

###########################################################################
### OpenShift Registries Locations
###########################################################################

oreg_url=registry.redhat.io/openshift3/ose-${component}:${version}

oreg_auth_user={{ oreg_auth_user }}
oreg_auth_password={{ oreg_auth_password }}

# For Operator Framework Images
openshift_additional_registry_credentials=[{'host':'registry.connect.redhat.com','user':'{{ oreg_auth_user }}','password':'{{ oreg_auth_password }}','test_image':'mongodb/enterprise-operator:0.3.2'}]

openshift_examples_modify_imagestreams=true

###########################################################################
### OpenShift Master Vars
###########################################################################

openshift_master_api_port=443
openshift_master_console_port=443

#Default:  openshift_master_cluster_method=native
openshift_master_cluster_hostname={{ openshift_master_cluster_hostname }}
openshift_master_cluster_public_hostname={{ openshift_master_cluster_public_hostname }}
openshift_master_default_subdomain={{ openshift_master_default_subdomain }}
openshift_master_overwrite_named_certificates=True

###########################################################################
### OpenShift Network Vars
###########################################################################

osm_cluster_network_cidr=10.1.0.0/16
openshift_portal_net=172.30.0.0/16

#os_sdn_network_plugin_name='redhat/openshift-ovs-multitenant'
os_sdn_network_plugin_name='redhat/openshift-ovs-networkpolicy'

###########################################################################
### OpenShift Authentication Vars
###########################################################################

# htpasswd
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider',}]

# Tieto ldap
#openshift_master_identity_providers=[{'name': 'Tieto AD', 'challenge': 'true', 'login': 'true', 'kind': 'LDAPPasswordIdentityProvider', 'attributes': {'id': ['sAMAccountName'], 'email': ['mail'], 'name': ['cn'], 'preferredUsername': ['sAMAccountName']}, 'bindDN': '{{ openshift_ldap_account }}', 'bindPassword': '{{ openshift_ldap_password }}', 'ca': '/etc/origin/master/ldap-ca-cert.crt', 'insecure': 'false', 'url': '{{ openshift_ldap_url }}'}]
#openshift_master_ldap_ca_file=/root/ipa-ca.crt

###########################################################################
### OpenShift Router and Registry Vars
###########################################################################

openshift_hosted_router_replicas=2

openshift_hosted_registry_replicas=1

openshift_hosted_registry_storage_kind=glusterfs
openshift_hosted_registry_storage_volume_size=100Gi
openshift_hosted_registry_selector='node-role.kubernetes.io/infra=true'

###########################################################################
### OpenShift Service Catalog Vars
###########################################################################

openshift_enable_service_catalog=true

template_service_broker_install=true
openshift_template_service_broker_namespaces=['openshift']

ansible_service_broker_install=true
ansible_service_broker_local_registry_whitelist=['.*-apb$']

openshift_hosted_etcd_storage_access_modes=['ReadWriteOnce']
openshift_hosted_etcd_storage_volume_size=10G

###########################################################################
### OpenShift Metrics and Logging Vars
###########################################################################


#########################
# Prometheus Metrics
#########################

openshift_hosted_prometheus_deploy=false
openshift_prometheus_namespace=openshift-metrics
openshift_prometheus_node_selector={"node-role.kubernetes.io/infra":"true"}

#openshift_cluster_monitoring_operator_install=true

# Suggested Quotas and limits for Prometheus components:
openshift_prometheus_memory_requests=2Gi
openshift_prometheus_cpu_requests=750m
openshift_prometheus_memory_limit=2Gi
#openshift_prometheus_cpu_limit=750m
openshift_prometheus_alertmanager_memory_requests=300Mi
openshift_prometheus_alertmanager_cpu_requests=200m
openshift_prometheus_alertmanager_memory_limit=300Mi
openshift_prometheus_alertmanager_cpu_limit=200m
openshift_prometheus_alertbuffer_memory_requests=300Mi
openshift_prometheus_alertbuffer_cpu_requests=200m
openshift_prometheus_alertbuffer_memory_limit=300Mi
openshift_prometheus_alertbuffer_cpu_limit=200m


########################
# Cluster Metrics
########################
openshift_metrics_install_metrics=false

#openshift_metrics_storage_kind=nfs
#openshift_metrics_storage_access_modes=['ReadWriteOnce']
#openshift_metrics_storage_nfs_directory=/srv/nfs
#openshift_metrics_storage_nfs_options='*(rw,root_squash)'
#openshift_metrics_storage_volume_name=metrics
#openshift_metrics_storage_volume_size=10Gi
#openshift_metrics_storage_labels={'storage': 'metrics'}
#openshift_metrics_cassandra_pvc_storage_class_name=''


openshift_metrics_hawkular_nodeselector={"node-role.kubernetes.io/infra": "true"}
openshift_metrics_cassandra_nodeselector={"node-role.kubernetes.io/infra": "true"}
openshift_metrics_heapster_nodeselector={"node-role.kubernetes.io/infra": "true"}

openshift_metrics_duration=7

# Grafana
openshift_grafana_node_selector={"node-role.kubernetes.io/infra":"true"}
openshift_grafana_storage_type=pvc
openshift_grafana_pvc_size=2Gi
openshift_grafana_node_exporter=true

########################
# Cluster Logging
########################

openshift_logging_install_logging=false
#openshift_logging_install_eventrouter=True

#openshift_logging_storage_kind=nfs
#openshift_logging_storage_access_modes=['ReadWriteOnce']
#openshift_logging_storage_nfs_directory=/srv/nfs
#openshift_logging_storage_nfs_options='*(rw,root_squash)'
#openshift_logging_storage_volume_name=logging
#openshift_logging_storage_volume_size=10Gi
#openshift_logging_storage_labels={'storage': 'logging'}
#openshift_logging_es_pvc_storage_class_name=''
#openshift_logging_es_memory_limit=8Gi
#openshift_logging_es_cluster_size=1
#openshift_logging_curator_default_days=2

openshift_logging_kibana_nodeselector={"node-role.kubernetes.io/infra": "true"}
openshift_logging_curator_nodeselector={"node-role.kubernetes.io/infra": "true"}
openshift_logging_es_nodeselector={"node-role.kubernetes.io/infra": "true"}
openshift_logging_eventrouter_nodeselector={"node-role.kubernetes.io/infra": "true"}

#openshift_logging_use_mux=true
#openshift_logging_use_ops=true
#openshift_logging_kibana_hostname=kibana.apps.openshift-test.int.tieto.com
#openshift_logging_kibana_ops_hostname=kibana-ops.apps.openshift-test.int.tieto.com
#openshift_logging_es_allow_external=True
#openshift_logging_es_hostname=elasticsearch.apps.openshift-test.int.tieto.com

###########################################################################
### OpenShift Hosts
###########################################################################

[OSEv3:children]
lb
masters
etcd
nodes
glusterfs
infra

[lb]
{% for host in groups['lb'] %}
{{ hostvars[host]['ansible_hostname'] }}
{% endfor %}

[masters]
{% for host in groups['masters'] %}
{{ hostvars[host]['ansible_hostname'] }}
{% endfor %}

[etcd]
{% for host in groups['masters'] %}
{{ hostvars[host]['ansible_hostname'] }}
{% endfor %}

[nodes]
## These are the masters
{% for host in groups['masters'] %}
{{ hostvars[host]['ansible_hostname'] }} openshift_node_group_name='node-config-master' openshift_node_problem_detector_install=true
{% endfor %}

## These are regular nodes
{% for host in groups['nodes'] %}
{{ hostvars[host]['ansible_hostname'] }} openshift_node_group_name="node-config-compute" openshift_node_problem_detector_install=true
{% endfor %}

# GlusterFS nodes
{% for host in groups['glusterfs'] %}
{{ hostvars[host]['ansible_hostname'] }} openshift_node_group_name='node-config-compute' openshift_node_problem_detector_install=true
{% endfor %}

# Infra nodes
{% for host in groups['infra'] %}
{{ hostvars[host]['ansible_hostname'] }} openshift_node_group_name='node-config-infra' openshift_node_problem_detector_install=true
{% endfor %}

[glusterfs]
{% for host in groups['glusterfs'] %}
{{ hostvars[host]['ansible_hostname'] }} glusterfs_devices='{{ glusterfs_devices }}'
{% endfor %}

# only if we want glusterfs on infra nodes
[glusterfs_infra]
{% for host in groups['infra'] %}
{{ hostvars[host]['ansible_hostname'] }} glusterfs_devices='{{ glusterfs_devices }}'
{% endfor %}

